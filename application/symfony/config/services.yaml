# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
    app.menu_builder:
        class: App\Menu\Menu
    app.menu.usertopbar:
        class: Knp\Menu\MenuItem
        factory: ['@app.menu_builder', 'userTopbar']
        tags:
            - { name: knp_menu.menu, alias: userTopbar }
    app.menu.source:
        class: Knp\Menu\MenuItem
        factory: ['@app.menu_builder', 'sourceNavbar']
        tags:
            - { name: knp_menu.menu, alias: sourceNavbar }
    app.menu.node:
        class: Knp\Menu\MenuItem
        factory: ['@app.menu_builder', 'nodeSubbar']
        tags:
            - { name: knp_menu.menu, alias: nodeSubbar }
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Exception,Kernel.php}'
    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    # Needed for integration tests
    App\Domain\RequestManagement\Entity\RequestedEntityService:
        public: true
    App\Domain\RequestManagement\Right\RequestedRightService:
        public: true
    App\Domain\UserManagement\UserSourceDirectorService:
        public: true
    App\Domain\RequestManagement\User\RequestedUserService:
        public: true
    App\Domain\RequestManagement\Action\RequestedActionService:
        public: true
    App\Domain\FormManagement\RequestedActionFormBuilderService:
        public: true
    App\Domain\SecureManagement\SecureRequestedRightCheckerService:
        public: true
    App\Domain\ActionManagement\ActionService:
        public: true
    App\Domain\ActionManagement\ActionHandlerService:
        public: true
        